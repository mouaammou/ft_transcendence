channel_layer.send:
    # send a message to a single channel
    channel_name: str
    message: 


channel_layer.group_add:
    # add a channel to a group
    group: str
    channel_name: str


channel_layer.group_discard:
    # removes a channel from a group
    group: str
    channel_name: str


channel_layer.group_send:
    # sends a message to all channels in a group
    group: str
    message: dict

channel_layer.send:
    # sends a message to a channel  in a group
    channel_name: str
    message: dict

attrs:***********
self.scope: dict contains info about the connection
self.channel_name: name of the current channel

=============================


make onPress and onrelease
handle keys for both local and remote


add pending dict to game engine where all games thats waiting a player
will wait until a player reconnects or accepts the game


scope={
    'type': 'websocket',
    'path': '/ws/somepath/',
    'raw_path': b'/ws/somepath/',
    'query_string': b'param1=value1&param2=value2',
    'headers': [
        (b'host', b'localhost:8000'),
        (b'connection', b'Upgrade'),
        (b'upgrade', b'websocket'),
        ...
    ],
    'subprotocols': [],
    'client': ('127.0.0.1', 54555),
    'server': ('127.0.0.1', 8000),
    'time': <timestamp>,
    'session': <Django session object>,
    'user': <Django user object>,
    'cookies': {
        'sessionid': '...',
        'csrftoken': '...'
    },
    'url_route': {
        'kwargs': {
            'room_name': 'chat_room'
        }
    },
    'asgi': {
        'version': '3.0'
    },
    'extensions': {
        'websocket.http.response': {}
    },
    'root_path': '',
    'app': <ASGI app instance>
}


#send to the users to go to the game page